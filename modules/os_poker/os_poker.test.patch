diff -r 966c557c2880 etc/drupal/6/sites/all/modules/os_poker/os_poker.test
--- a/etc/drupal/6/sites/all/modules/os_poker/os_poker.test	Sat Nov 21 15:14:50 2009 +0100
+++ b/etc/drupal/6/sites/all/modules/os_poker/os_poker.test	Sat Nov 21 17:51:02 2009 +0100
@@ -3,6 +3,10 @@
 global $TEST;
 $TEST = TRUE;
 
+function db_query_false() {
+	return FALSE;
+}
+
 class OSPokerTestCase extends DrupalWebTestCase
 {
 	/**
@@ -31,6 +35,9 @@
 	function setUp()
 	{
 		parent::setUp('profile', 'shindig_integrator', 'user_relationships', 'jquery_ui', 'remember_me', 'os_poker');
+		global $os_poker_db_query_override;
+		$os_poker_db_query_override = "db_query";
+		os_poker_get_poker_app_id(TRUE);
 		$this->_current_user = $this->drupalCreateUser(array('administer users'));
 	}
 
@@ -40,6 +47,8 @@
 
 	function tearDown()
 	{
+		global $os_poker_db_query_override;
+		$os_poker_db_query_override = "db_query";
 		parent::tearDown();
 	}
 	
@@ -124,6 +133,9 @@
 	function setUp()
 	{
 		parent::setUp('profile', 'shindig_integrator', 'user_relationships', 'jquery_ui', 'remember_me', 'os_poker');
+		global $os_poker_db_query_override;
+		$os_poker_db_query_override = "db_query";
+		os_poker_get_poker_app_id(TRUE);
 		$this->_current_user = $this->drupalCreateUser(array('administer users'));
 		$profile = array();
 		$profile["profile_fname"] = "foo_fname";
@@ -144,6 +156,8 @@
 
 	function tearDown()
 	{
+		global $os_poker_db_query_override;
+		$os_poker_db_query_override = "db_query";
 		parent::tearDown();
 	}
 
@@ -173,17 +187,22 @@
 		$this->assertEqual("foo_gender", $user->profile_gender);
 		$user->profile_gender = "bar_gender";
 		$this->assertEqual("bar_gender", $user->profile_gender);
-		$this->assertEqual(100000, $user->money[1]);
+		$money = $user->money[1];
+		$this->assertEqual(100000, $money, "user money is: $money should be 100000");
 		$user->money = array(1 => 5000050);
-		$this->assertEqual(5000050, $user->money[1]);
-		$this->assertEqual(5000050, $user->Chips());
-		$this->assertEqual("$50,000.50", $user->Chips(TRUE), $user->Chips(TRUE) . " should be equals to $50,000.50");
+		$money = $user->money[1];
+		$this->assertEqual(5000050, $money, "user money is: $money should be 5000050");
+		$chips = $user->Chips();
+		$this->assertEqual(50000.5, $chips, "user chips is: $chips should be 50000.5");
+		$chips = $user->Chips(TRUE);
+		$this->assertEqual("$50,000.50", $user->Chips(TRUE), "user chips is: $chips should be equals to $50,000.50");
 		$this->assertEqual(0, count($user->Buddies()));
 		$this->assertEqual(0, count($user->Buddies(TRUE)));
 
 	}
 	
-	function	testUserClassInvalid() {
+	function	testUserClassInvalid()
+	{
 		try
 		{
 			$invalidUser = new CUser(42);
@@ -194,7 +213,8 @@
 		}
 	}
 	
-	function	testUserClassDefaultChips() {
+	function	testUserClassDefaultChips()
+	{
 		$duser2 = $this->drupalCreateUser(array('administer users'));
 		$userManager = CUserManager::instance();
 		$user2 = $userManager->User($duser2->uid);
@@ -202,7 +222,30 @@
 		$this->assertEqual(0, $user2->Chips());
 	}
 
-	function	testUserClassOnline() {
+	function	testUserClassSetChips()
+	{
+		$duser2 = $this->drupalCreateUser(array('administer users'));
+		$userManager = CUserManager::instance();
+		$user2 = $userManager->User($duser2->uid);
+		$this->assertNotNull($user2);
+		$user2->chips = 500.5;
+		$this->assertEqual(500.5, $user2->Chips());
+	}
+
+	function	testUserClassSave()
+	{
+		$userManager = CUserManager::instance();
+		$uid = $this->_current_user->uid;
+		$user = $userManager->User($uid);
+		$this->assertNotNull($user);
+		$user->chips = 42.42;
+		$user->Save();
+		$money = json_decode(db_result(db_query("SELECT `name`, `value` FROM `{application_settings}` WHERE `application_id`=%d AND `user_id`=%d", os_poker_get_poker_app_id(), $uid)));
+		$this->assertEqual(4242, $money[1]);
+	}
+
+	function	testUserClassOnline()
+	{
 		$userManager = CUserManager::instance();
 		$uid = $this->_current_user->uid;
 		$user = $userManager->User($uid);
@@ -210,7 +253,11 @@
 		$this->assertTrue($user->Online());
 		$this->drupalLogout($this->_current_user);
 		$this->assertFalse($user->Online());
-	}
+		$this->drupalLogin($this->_current_user);
+		$this->assertTrue($user->Online());
+		$os_poker_db_query_override = "db_query_false";
+		$this->assertFalse($user->Online());
+	}	
 }
 
 class OSPokerFormTestCase extends DrupalWebTestCase
@@ -231,6 +278,9 @@
 	function setUp()
 	{
 		parent::setUp('profile', 'shindig_integrator', 'user_relationships', 'jquery_ui', 'remember_me', 'os_poker');
+		global $os_poker_db_query_override;
+		$os_poker_db_query_override = "db_query";
+		os_poker_get_poker_app_id(TRUE);
 		$this->_current_user = $this->drupalCreateUser(array('administer users'));
 		$profile = array();
 		$profile["profile_fname"] = "foo_fname";
@@ -250,20 +300,25 @@
 
 	function tearDown()
 	{
+		global $os_poker_db_query_override;
+		$os_poker_db_query_override = "db_query";
 		parent::tearDown();
 	}
 
-	function	testUserLoginBlockAlter() {
+	function	testUserLoginBlockAlter()
+	{
 		$form = drupal_get_form('user_login_block');
 		$this->assertTrue(strstr($form, 'os_poker_submit'));
 	}
 
-	function	testUserRegisterAlter() {
+	function	testUserRegisterAlter()
+	{
 		$form = drupal_get_form('user_register');
 		$this->assertTrue(strstr($form, 'os_poker_submit'));
 	}
 
-	function	testUserProfileFormAlter() {
+	function	testUserProfileFormAlter()
+	{
 		require_once(drupal_get_path('module', 'user') . "/user.pages.inc");
 		$user = $this->_current_user;
 		profile_load_profile($user);
@@ -271,12 +326,14 @@
 		$this->assertTrue(strstr($form, 'os_poker_submit'));
 	}
 	
-	function	testPvBuddyFilter() {
+	function	testPvBuddyFilter()
+	{
 		$form = drupal_get_form('pv_buddy_filter');
 		$this->assertTrue(strstr($form, 'Poker Buddies'));
 	}
 
-	function	testGadget() {
+	function	testGadget()
+	{
 		$this->assertNull(os_poker_gadget());
 		db_query("INSERT INTO {applications} (url, title) VALUES('http://dummyurl', 'jpoker')");
 		$id = os_poker_get_poker_app_id();
@@ -304,6 +361,9 @@
 	function setUp()
 	{
 		parent::setUp('profile', 'shindig_integrator', 'user_relationships', 'jquery_ui', 'remember_me', 'os_poker', 'locale');
+		global $os_poker_db_query_override;
+		$os_poker_db_query_override = "db_query";
+		os_poker_get_poker_app_id(TRUE);
 	}
 
 	/**
@@ -312,6 +372,8 @@
 
 	function tearDown()
 	{
+		global $os_poker_db_query_override;
+		$os_poker_db_query_override = "db_query";
 		parent::tearDown();
 	}
 
@@ -383,6 +445,7 @@
 		parent::setUp('profile', 'shindig_integrator', 'user_relationships', 'jquery_ui', 'remember_me', 'os_poker', 'locale');
 		global $os_poker_db_query_override;
 		$os_poker_db_query_override = "db_query";
+		os_poker_get_poker_app_id(TRUE);
 	}
 
 	/**
@@ -391,6 +454,8 @@
 
 	function tearDown()
 	{
+		global $os_poker_db_query_override;
+		$os_poker_db_query_override = "db_query";
 		parent::tearDown();
 	}
 
@@ -443,9 +508,6 @@
 		profile_save_profile($profile2, $user2, "Personal information", FALSE);
 		$this->assertTrue(os_poker_nickname_exists('bar_nickname', $user->uid));
 		global $os_poker_db_query_override;
-		function db_query_false() {
-			return FALSE;
-		}
 		$os_poker_db_query_override = "db_query_false";
 		$this->assertTrue(os_poker_nickname_exists('foo_nickname2', $user->uid));
 	}
@@ -480,6 +542,9 @@
 	function setUp()
 	{
 		parent::setUp('profile', 'shindig_integrator', 'user_relationships', 'jquery_ui', 'remember_me', 'os_poker', 'locale');
+		global $os_poker_db_query_override;
+		$os_poker_db_query_override = "db_query";
+		os_poker_get_poker_app_id(TRUE);
 	}
 
 	/**
@@ -488,6 +553,8 @@
 
 	function tearDown()
 	{
+		global $os_poker_db_query_override;
+		$os_poker_db_query_override = "db_query";
 		parent::tearDown();
 	}
 
