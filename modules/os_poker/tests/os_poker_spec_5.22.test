<?php
// $Id$

/**
 * @file
 * Poker 5.22: Buddy Request
 *
 */

/**
 * Includes the custom test case class with basic site configuration.
 */
require_once(dirname(__FILE__) .'/os_poker_test_case.tinc');

/**
 * Spec: 5.22: Buddy Request (on medium profile) test case
 *
 * Verifies whatever workflow is working according to specifications.
 * Validates this and that.
 *
 * @assert: From medium profile a buddy request can be started.
 * @assert: The request button is only shown on profiles of players who are not
 *          buddies yet.
 * @assert: The request button is only shown on profiles of players who allow
 *          buddy requests in their settings.
 * @assert: A request is started by sending a notification to the other player.
 * @assert: The requestee can accept the request using button in the ingame
 *          notification or message
 * @assert: The requestee can decline the request using button in the ingame
 *          notification or message
 * @assert: If the requestee accepts the request a buddy relation is ceated.
 * @assert: If the requestee decline the request no buddy relation is ceated.
 *
 */
class OSPokerBuddyRequest extends OsPokerWebTestCase {

  CONST REQUEST_LINK = 'Request Buddy';
  CONST ACCEPT_LINK = 'Accept';
  CONST DECLINE_LINK = 'Decline';
  CONST MESSAGE_TITLE = '!name wants to be your buddy';
  
  protected $users;

  /**
   * Implementation of hook_info().
   */
  public static function getInfo() {
    return array(
      'name'        => '5.22 Buddy Request',
      'description' => 'Buddy Request functionality tests',
      'group'       => 'OS Poker Specifications',
    );
  }

  /**
   * Implementation of setUp().
   */
  function setUp() {
    // Enable required modules and set default site configuration.
    parent::setUp();

    $this->users = array($this->drupalCreateUser(), $this->drupalCreateUser());
    foreach(array_reverse($this->users) as $user) {
      $this->OsPokerLogin($user, array('profile_nickname' => $user->name));
    }

  }

  /**
   * Implementation of tearDown().
   */
  function tearDown() {
    parent::tearDown();
  }

  /**
   * Verify that
   * @assert: From medium profile a buddy request can be started.
   * @assert: The request button is only shown on profiles of players who are
   *          not buddies yet.
   * @assert: The request button is only shown on profiles of players who allow
   *          buddy requests in their settings.
   *
   * * The verification is done through these steps:
   *  - go to second user profile
   *  - verify that there is a request buddy relationship button
   *  - create a buddy relationship between first and second users
   *  - go to the second user profile
   *  - verify that there is no request buddy relationship button
   *  - create a third user
   *  - log in as the third user
   *  - disallow buddy request in user profile
   *  - log in as the first user
   *  - go to third user profile page
   *  - verify that there is no request buddy relationship button
   */
  function testBuddyRequestButton() {
    $this->drupalGet('poker/profile/'.$this->users[1]->uid);
    $this->assertText(self::REQUEST_LINK, 'From medium profile a buddy request can be started', 'Specs');
    
    $this->OsPokerCreateBuddyRelationShip($this->users[0], $this->users[1]);
    $this->drupalGet('poker/profile/'.$this->users[1]->uid);
    $this->assertNoText(self::REQUEST_LINK, 'The request button is only shown on profiles of players who are not buddies yet', 'Specs');
    
    $this->users[2] = $this->drupalCreateUser();
    $this->OsPokerLogin($this->users[2], array('profile_nickname' => $this->users[2]->name));
    //TODO: disallow buddy reqyest in settings
    $this->drupalPost('poker/profile', array('allow_request' => '0'));    
    $this->drupalLogin($this->users[0]);
    $this->drupalGet('poker/profile/'.$this->users[2]->uid);
    $this->assertNoText(self::REQUEST_LINK, 'The request button is only shown on profiles of players who allow buddy requests in their settings', 'Specs');
    
  }
  
  /**
   * Verify that
   * - A request is started by sending a notification to the other player.
   * - The requestee can accept the request using button in the ingame
   *   notification or message
   * - If the requestee accepts the request, a buddy relation is ceated.
   * 
   * The verification is done through these steps:
   * - click on the request buddy relationship button on the second user profile 
   * - login as second user
   * - verify that there is a request notification message in the messagebox
   * - click on the message to open it
   * - click on the accept request button
   * - go to buddylist, verify that it contains the first user
   *
   */
  function testAcceptedBuddyRequest()
  {
    $this->drupalGet('poker/profile/'.$this->users[1]->uid);
    $this->clickLink(self::REQUEST_LINK);
    
    $this->drupalLogin($this->users[1]);
    
    $this->drupalGet('poker/messagebox');
    $message_title = t(self::MESSAGE_TITLE, array('!name', $this->users[0]->name));
    $this->assertText($message_title, 'A request is started by sending a notification to the other player', 'Specs');
    $this->clickLink($message_title);
    
    $this->assertText(self::ACCEPT_LINK, 'The requestee can accept the request using button in the ingame notification or message', 'Specs');
    $this->clickLink(self::ACCEPT_LINK);
    
    $this->drupalGer('poker/buddies');
    $this->assertText($this->users[0]->name, 'If the requestee accepts the request, a buddy relation is ceated');
  }
  
/**
   * Verify that
   * - A request is started by sending a notification to the other player.
   * - The requestee can decline the request using button in the ingame
   *   notification or message
   * - If the requestee decline the request, no buddy relation is ceated.
   * 
   * The verification is done through these steps:
   * - click on the request buddy relationship button on the second user profile 
   * - login as second user
   * - verify that there is a request notification message in the messagebox
   * - click on the message to open it
   * - click on the decline request button
   * - go to buddylist, verify that it doesn't contains the first user
   *
   */
  function testDeclinedBuddyRequest()
  {
    $this->drupalGet('poker/profile/'.$this->users[1]->uid);
    $this->clickLink(self::REQUEST_LINK);
    
    $this->drupalLogin($this->users[1]);
    
    $this->drupalGet('poker/messagebox');
    $message_title = t(self::MESSAGE_TITLE, array('!name', $this->users[0]->name));
    $this->assertText($message_title, 'A request is started by sending a notification to the other player', 'Specs');
    $this->clickLink($message_title);
    
    $this->assertText(self::DECLINE_LINK, 'The requestee can accept the request using button in the ingame notification or message', 'Specs');
    $this->clickLink(self::DECLINE_LINK);
    
    $this->drupalGer('poker/buddies');
    $this->assertNoText($this->users[0]->name, 'If the requestee accepts the request, a buddy relation is ceated');
  }


}
