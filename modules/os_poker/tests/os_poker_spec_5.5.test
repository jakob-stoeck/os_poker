<?php
// $Id$

/**
 * @file
 * Poker 5.5 specification test case: Virtual Goods / Digital Assets workflow
 *
 */

/**
 * Includes the custom test case class with basic site configuration.
 */
require_once(dirname(__FILE__) .'/os_poker_test_case.tinc');

/**
 * Spec: 5.5: Workflow "Virtual Goods / Digital Assets" test case
 *
 * Verifies Virtual Goods / Digital Assets workflow is working according to specifications.
 * Validates virtual goods can be purchased and shows on user profiles.
 *
 * @assert: virtual goods can be purchased for all users playing at the same table.
 *
 */
class OSPokerSpecificationsVirtualGoods extends OsPokerWebTestCase {

  /**
   * Implementation of hook_info().
   */
  public static function getInfo() {
    return array(
      'name'        => '5.5 Virtual Goods / Digital Assets',
      'description' => 'Virtual Goods / Digital Assets functionality tests',
      'group'       => 'OS Poker Specifications',
    );
  }

  /**
   * Implementation of setUp().
   */
  function setUp() {
    // Enable required modules and set default site configuration.
    parent::setUp();
  }

  /**
   * Implementation of tearDown().
   */
  function tearDown() {
    parent::tearDown();
  }

  /**

   * Verify that virtual goods can be purchased for all users playing
   * at the same table.
   *
   * The verification is done through these steps:
   * - Create userA
   * - Create userB
   * - Create userC
   * - Fill user2table with userA,userB,userC's uid and game_id: 42
   * - Login userA
   * - Open medium profile page for userB
   * - Click send gift
   * - Select an gift X
   * - Click buy for table
   * - Open profile for userB
   * - You should see gift X
   * - Open profile for userC
   * - You should see gift X
   *
   */

  function createPokerDatabase() {
    global $POKER_DB;
    $POKER_DB = "pythonpokernetworktest";
    require_once(drupal_get_path('module', 'os_poker') . "/poker.class.php");

    shell_exec("mysqladmin -f -u root drop $POKER_DB");
    shell_exec("mysqladmin -u root create $POKER_DB");
    shell_exec("mysql -u root $POKER_DB < /usr/share/poker-network/schema.sql");
    global $db_url;
    if (is_string($db_url)) { $db_url = array('default' => $db_url); } // Thanks Bdragon
    $db_url[$POKER_DB] = "mysql://root@localhost/$POKER_DB";
  }
  
  function insertShopItemsAndCategories() {
    db_query("INSERT INTO {poker_category} VALUES (1,'Drinks'),(2,'Snacks'),(3,'Smokes'),(4,'Entertainment')");
    db_query("INSERT INTO {poker_item} VALUES (2,2,'sites/default/files/poker_items/item-2.jpg','Cocktail',105674,1,'next monday'),(11,1,'sites/default/files/poker_items/item-1.jpg','Test',42,1,'+3 minutes'),(1,1,'sites/default/files/poker_items/item-1.jpg','Beer',5,1,'+1 minute'),(14,3,'sites/default/files/poker_items/item-2.jpg','Test1',10,1,'+5 minutes'),(15,3,NULL,'Test2',0,1,NULL),(16,4,'sites/default/files/poker_items/item-2.jpg','Sun glasses',100,1,'+2 hour')");
  } 

  function joinPokerTable($user, $game_id) {
    $previous_db = db_set_active($POKER_DB);
    $sql = "INSERT INTO user2table VALUES (%d, 42, 0, 0)";
    db_query($sql, $user->uid);
    db_set_active($previous_db);
  }
  
  function testBuyForTable() {
	require_once(drupal_get_path('module', 'os_poker') . "/shop.class.php");

    $this->createPokerDatabase();
    $this->insertShopItemsAndCategories();

    $userA = $this->drupalCreateUser();
    $userB = $this->drupalCreateUser();
    $userC = $this->drupalCreateUser();

    $this->joinPokerTable($userA, 42);
    $this->joinPokerTable($userB, 42);
    $this->joinPokerTable($userC, 42);

    $this->OsPokerLogin($userA, array('profile_nickname' => 'userA'));

//    $this->drupalGet('poker/shop/shop/1/table');

/* cmirey : completing the process by calling directly GiveItem. */
   
   CShop::GiveItem(11, array($userB->uid, $userC->uid));

    $this->OsPokerLogin($userB, array('profile_nickname' => 'userB'));

    $this->drupalGet('poker/profile');
    $this->assertTrue(TRUE, $this->drupalGetContent());

    $this->OsPokerLogin($userC, array('profile_nickname' => 'userC'));

    $this->drupalGet('poker/profile');
    $this->assertTrue(TRUE, $this->drupalGetContent());

    
  }

}
