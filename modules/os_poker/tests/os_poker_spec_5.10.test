<?php // -*- mode: php; tab-width: 2 -*-
//
//    Copyright (C) 2009, 2010 Pokermania
//
//    This program is free software: you can redistribute it and/or modify
//    it under the terms of the GNU Affero General Public License as published by
//    the Free Software Foundation, either version 3 of the License, or
//    (at your option) any later version.
//
//    This program is distributed in the hope that it will be useful,
//    but WITHOUT ANY WARRANTY; without even the implied warranty of
//    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//    GNU Affero General Public License for more details.
//
//    You should have received a copy of the GNU Affero General Public License
//    along with this program.  If not, see <http://www.gnu.org/licenses/>.
//


/**
 * @file
 * Poker 5.10 specification test case: Internal Promotions
 *
 */

/**
 * Includes the custom test case class with basic site configuration.
 */
require_once(dirname(__FILE__) .'/os_poker_test_case.tinc');

/**
 * Spec: 5.10: Internal Promotions placement
 *
 * Verifies Internal Promotion workflow is working according to specifications.
 *
 * @assert: Advertising placement
 *
 */
class OSPokerInternalPromotionsPlacement extends OsPokerWebTestCase {

  /**
   * @var user object created and logged in during setUp process.
   */
  protected $skel_user;

  /**
   * Implementation of hook_info().
   */
  public static function getInfo() {
    return array(
      'name'        => '5.10: Workflow Internal Promotions',
      'description' => 'Internal Promotions functionalities tests',
      'group'       => 'OS Poker Specifications',
    );
  }

  /**
   * Implementation of setUp().
   */
  function setUp() {
    // Enable required modules and set default site configuration.
    parent::setUp();

    /**
     * Register an 'skel_user' account and complete its profile.
     * This user has 'skel_user' for nickname.
     */
    $this->skel_user = $this->drupalCreateUser();
    // Login the user, complete profile form
    $this->OsPokerLogin($this->skel_user, array('profile_nickname' => 'skel_user'));

  }

  /**
   * Implementation of tearDown().
   */
  function tearDown() {
    parent::tearDown();
  }

	/**
	* Verify Advertising placement
	*
	* with a user with at least one buddy :
	* - Go to Medium Profile verify that "Gift of the Day" is present
	* - Go to Buddy-List verify that "Gift of the Day" is present on outer right
	* - Go to Buddy-List verify that "Invite friend" Replace empty buddies
	* - Go to Search Result verify that "Gift of the Day" is present on right up
	* - Go to Search Result verify that "Invite friend" is present on right down
	* - Go to Buddies verify that "Gift of the Day" is present on right up
	* - Go to Buddies verify that "Invite friend" is present on right down
	* - Go to Invite Friends verify that "Invite friend" is present on right down
	*
	* Verify Todays Gift
	*
	* - Create a user, login and complete the profile.
	* - create 2 buddies
	* - store their chips amount
	* - trigger daily gift
	* - reload 2 buddies
	* - verify their chips amount have been increased with 100 chips
	*
	*/
	function testInternalPromotions(){
		
		/**
		 * Register a new 'invitee' account and complete its profile.
		 */
		$user = $this->drupalCreateUser();
		$this->OsPokerLogin($user);

		/* create 10 buddies and buddify them with user */
    $this->buddies = array();
		for($i=0; $i<12; $i++) {
				$this->buddies[] = $this->drupalCreateUser();
		}

		$buddy1 = $this->buddies[0];
		$buddy2 = $this->buddies[1];

		for ($i=0; $i < count($this->buddies); $i++) {
			$buddy = $this->buddies[$i];			
      $this->OsPokerLogin($buddy, array('profile_nickname' => $buddy->name));
			$this->OsPokerCreateBuddyRelationShip($user, $buddy);

			for ($j = $i+1; $j < count($this->buddies); $j++) {
					$this->OsPokerCreateBuddyRelationShip($this->buddies[$j], $buddy);
			}
		}


		
		/**
		 * Go to Buddy-List
		 */
		//FIXME : The block returned is as seen by current logged user (root)
		$block = os_poker_block('view', 2);
		$this->assertTrue(preg_match("/" . t('Invite Friends') . "/", $block["content"]) > 0, t("'Invite friend' Replace empty buddies"));

		// The block is returned for the admin account 
		$this->assertTrue(preg_match("/daily_gifts|invite_more_friends/", $block["content"]) > 0, t("'Gift of the Day' is present on buddy list"));
		
		/**
		 * Go to Buddies
		 */
		$this->drupalGet('poker/buddies');
		
		$this->assertRaw('sites/all/themes/poker/images/banner_free_gifts.jpg' , t("'Gift of the Day' is present on buddies page"));
		$this->assertRaw('sites/all/themes/poker/images/banner_invite_more_friends.jpg' , t("'Invite friend' is present on buddies page"));	

		$this->assertPattern('/<a.+?href="\?q=poker\/buddies\/invite".+?>/siU', t("Link Invite friend on buddy page"));
		
		/**
		 * Go to Search Result
		 */
		$this->drupalGet('poker/buddies/search');
		$this->drupalPost($this->getUrl(), array(), t('Send'));
		
		$this->assertRaw('sites/all/themes/poker/images/banner_free_gifts.jpg' , t("'Gift of the Day' is present on search result"));
		$this->assertRaw('sites/all/themes/poker/images/banner_invite_more_friends.jpg' , t("'Invite friend' is present on search result"));
		
		$this->assertPattern('/<a.+?href="\?q=poker\/buddies\/invite".+?>/siU', t("Link Invite friend on buddy search page"));

		/**
		 * Go to Invite
		 */
		$this->drupalGet('poker/buddies/invitedlist');
		
		$this->assertRaw('sites/all/themes/poker/images/banner_invite_more_friends.jpg' , t("'Invite friend' is present on search result"));
		

		$first_buddy = CUserManager::instance()->User($buddy1->uid);		
		$first_chips = $first_buddy->Chips();
		$second_buddy = CUserManager::instance()->User($buddy2->uid);		
		$second_chips = $second_buddy->Chips();
		/**
		 * Check daily gift
		 */
		$first_user = CUserManager::instance()->User($user->uid, TRUE);
		
		//Assert basic amount of chips
		$nchips = $first_user->Chips();
		$this->assertEqual($nchips == 3000, t("User has 3000 chips"));

		//Perform daily gift
		$this->assertTrue($first_user->CanDailyGift(), t('User can use daily gift'));
		$first_user->DailyGift();
		
		//Assert user cannot use daily gift anymore
		$this->assertFalse($first_user->CanDailyGift(), t('This can only be used once per day by the user.'), t("SpecPoker"));
		
		//Assert that user giving daily give has a chip count that does not change
		$this->assertTrue($nchips == $first_user->Chips(), t("User giving daily give has a chip count that does not change"));
		

		/* reload first buddy and check its chips amount */
		$first_buddy = CUserManager::instance()->User($buddy1->uid, TRUE);
		$this->AssertTrue($first_chips + 100 == $first_buddy->Chips(), $first_buddy->Chips()." == ".$first_chips." + 100 => ".t('The process triggered by clicking the banner will send a certain amount of chips (e.g. 100 chips as found in a database record ) to all buddies of the acting player'), t('SpecPoker'));
		$this->pass($first_buddy->Chips() - $first_chips, "Debug: Increment to first buddy chips after daily gift");

		/* reload second buddy and check its chips amount */
		$second_buddy = CUserManager::instance()->User($buddy2->uid, TRUE);
		$this->pass($second_buddy->Chips() - $second_chips, "Debug: Increment to second buddy chips after daily gift");
		$this->AssertTrue($second_chips + 100 == $second_buddy->Chips(), $second_buddy->Chips()." == ".$second_chips." + 100 => ".t("to all buddies of the acting player."), t("SpecPoker"));

		/**
		 * Assert image in page changes after daily gift
		 */
		$first_user = CUserManager::instance()->User($user->uid, TRUE);
		$this->drupalLogin($user);
		/**
		 * Go to Buddy-List
		 */
		//FIXME : The block returned is as seen by current logged user (root)
		$block = os_poker_block('view', 2);

		// The block is returned for the admin account 
		$this->assertTrue(preg_match("/daily_gifts|invite_more_friends/", $block["content"]) > 0, t("'Gift of the Day' isn't present on buddy list anymore"));
		
		/**
		 * Go to Buddies
		 */
		$this->drupalGet('poker/buddies');
		
		$this->assertNoRaw('sites/all/themes/poker/images/banner_free_gifts.jpg' , t("'Gift of the Day' isn't present on buddies page anymore"));
		
		/**
		 * Go to Search Result
		 */
		$this->drupalGet('poker/buddies/search');
		$this->drupalPost($this->getUrl(), array(), t('Send'));
		
		$this->assertNoRaw('sites/all/themes/poker/images/banner_free_gifts.jpg' , t("'Gift of the Day' isn't present on search result anymore"));
		
		
	}


}
