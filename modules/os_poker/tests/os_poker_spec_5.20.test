<?php // -*- mode: php; tab-width: 2 -*-
//
//    Copyright (C) 2009, 2010 Pokermania
//
//    This program is free software: you can redistribute it and/or modify
//    it under the terms of the GNU Affero General Public License as published by
//    the Free Software Foundation, either version 3 of the License, or
//    (at your option) any later version.
//
//    This program is distributed in the hope that it will be useful,
//    but WITHOUT ANY WARRANTY; without even the implied warranty of
//    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//    GNU Affero General Public License for more details.
//
//    You should have received a copy of the GNU Affero General Public License
//    along with this program.  If not, see <http://www.gnu.org/licenses/>.
//


require_once(dirname(__FILE__) .'/os_poker_test_case.tinc');

class OSPokerUserSearch extends OsPokerWebTestCase {

  protected $skel_user;

  public static function getInfo() {
    return array(
      'name'        => '5.20 Search Buddy',
      'description' => 'User search functionality tests',
      'group'       => 'OS Poker Specifications',
    );
  }

  function setUp() {
    parent::setUp();

    $this->main_user = $this->drupalCreateUser();
    $this->OsPokerLogin($this->main_user, array('profile_nickname' => 'main_user'));

  }

  function tearDown() {
    parent::tearDown();
  }

  
  function  testSearching() {
    $profiles = array(
      array('profile_country'=>'France', 'profile_city'=>'Paris', 'profile_gender'=>'Male'),
      array('profile_country'=>'France', 'profile_city'=>'Nantes', 'profile_gender'=>'Male'),
      array('profile_country'=>'Belgium', 'profile_city'=>'Bruxelles', 'profile_gender'=>'Male'),
      array('profile_country'=>'Belgium', 'profile_city'=>'Namur', 'profile_gender'=>'Male'),
      array('profile_country'=>'France', 'profile_city'=>'Paris', 'profile_gender'=>'Female'),
      array('profile_country'=>'France', 'profile_city'=>'Nantes', 'profile_gender'=>'Female'),
    );
    $users = array();
    foreach($profiles as $key => $profile) {
      $user = $this->OsPokerCreateUserWithProfile($profile);
      $users[$key] = CUserManager::instance()->User($user->uid);
    }

    
    //User search without param returns all
    $this->drupalPost('poker/buddies/search', array(), t("Send"));
    foreach($users as $user) {
      $this->assertText($user->profile_nickname, t('User %nickname found is search results', array('%nickname' => $user->profile_nickname)));
    }
    
		//
		// assert that all fields are used as a criterion in the search and
		// combined with AND by exploring all field combinations.
		//
		$this->pass('Registered users can search others by nick (or part of it), sex, city, country,level or a combination of 2 or more of it (operator is and).', 'SpecPoker');
    $searches = array(
      'profile_country' => 'France',
      'profile_city' => 'Paris',
      'profile_gender' => 'Male',
    );
    foreach($searches as $k => $v) {
      $this->drupalPost('poker/buddies/search', array($k => $v), t("Send"));
      foreach($users as $user) {
        if($user->{$k} == $v) {
          $this->assertText($user->profile_nickname, t('User %nickname found is search results', array('%nickname' => $user->profile_nickname)));
        }
        else {
          $this->assertNoText($user->profile_nickname, t('User %nickname not found is search results', array('%nickname' => $user->profile_nickname)));
        }
      }
    }
    foreach($profiles as $pk => $profile) {
      $this->drupalPost('poker/buddies/search', $profile, t("Send"));
      foreach($users as $uk => $user) {
        if($pk == $uk) {
          $this->assertText($user->profile_nickname, t('User %nickname found is search results', array('%nickname' => $user->profile_nickname)));
        } else {
          $this->assertNoText($user->profile_nickname, t('User %nickname not found is search results', array('%nickname' => $user->profile_nickname)));
        }
      }
      
    }
  }
}