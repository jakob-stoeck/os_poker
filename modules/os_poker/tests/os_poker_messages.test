<?php
// -*- mode: php; tab-width: 2 -*-
//
//    Copyright (C) 2009, 2010 Pokermania
//
//    This program is free software: you can redistribute it and/or modify
//    it under the terms of the GNU Affero General Public License as published by
//    the Free Software Foundation, either version 3 of the License, or
//    (at your option) any later version.
//
//    This program is distributed in the hope that it will be useful,
//    but WITHOUT ANY WARRANTY; without even the implied warranty of
//    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//    GNU Affero General Public License for more details.
//
//    You should have received a copy of the GNU Affero General Public License
//    along with this program.  If not, see <http://www.gnu.org/licenses/>.
//


/**
 * @file
 * Poker Long Poll Message test case
 *
 */

/**
 * Includes the custom test case class with basic site configuration.
 */
require_once(dirname(__FILE__) .'/os_poker_test_case.tinc');

/**
 *
 */
class OSPokerLongPollMessagesTestCase extends OsPokerWebTestCase {

  private $messages = FALSE;

  public function getInfo() {
    return array(
      'name' => 'OS Poker Background Messages',
      'description' => 'Test the <em>background</em> messaging system (ie. ajax polling)',
      'group' => 'OS Poker',
    );
  }

  public function setUp() {
    parent::setUp();
    $this->user = $this->drupalCreateUser();
    $this->OsPokerLogin($this->user, array('profile_nickname' => $this->randomName()));
    require_once(drupal_get_path('module', 'os_poker') . "/scheduler.class.php");


  }

  public function tearDown() {
    parent::tearDown();
  }


  public function testBackgroundMessages() {
    //mongolito404: Test will fail if type and body.value are random strings...
    $message = array(
      'type' => 'foo',
      'body' => array('value' => 'bar'),
    );
    $this->assertTrue(CScheduler::instance()->RegisterTask(new CMessage(), $this->user->uid, array('live'), '-1 day', $message), t('Background message enqueued.'));
    //Receive the message
    $this->drupalGet('poker/messages/receive');
    //mongolito404: json_decode($this->drupalGetContent()) doesn't work neither :(
    $this->assertText(json_encode($message));
  }
}

?>
