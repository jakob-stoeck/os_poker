<?php // -*- mode: php; tab-width: 2 -*-
//
//    Copyright (C) 2009, 2010 Pokermania
//
//    This program is free software: you can redistribute it and/or modify
//    it under the terms of the GNU Affero General Public License as published by
//    the Free Software Foundation, either version 3 of the License, or
//    (at your option) any later version.
//
//    This program is distributed in the hope that it will be useful,
//    but WITHOUT ANY WARRANTY; without even the implied warranty of
//    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//    GNU Affero General Public License for more details.
//
//    You should have received a copy of the GNU Affero General Public License
//    along with this program.  If not, see <http://www.gnu.org/licenses/>.
//


require_once(dirname(__FILE__) .'/os_poker_test_case.tinc');

class OSPokerRankingSystem extends OsPokerWebTestCase {

  protected $skel_user;

  public static function getInfo() {
    return array(
				 'name'        => '5.2 Ranking System',
				 'description' => 'Ranking system tests',
				 'group'       => 'OS Poker Specifications',
				 );
  }

  function setUp() {
    parent::setUp();
    $this->skel_user = $this->drupalCreateUser();
    $this->OsPokerLogin($this->skel_user, array('profile_nickname' => 'skel_user'));
  }

  function tearDown() {
    parent::tearDown();
  }

  /**
   * Verify this
   *
   * The verification is done through these steps:
   login skel_user
   create a buddy with invitation process
   do it n times (let's say 5)
   iterate through skel_user buddies and add them a random amount of Chips
   call usort on buddies list and verify the order
   *
   */
  function testRankingSystem()
  {

    for ($i = 0; $i < 5; $i++)
	  {
		$this->drupalLogin($this->skel_user);

		$name = $this->randomName();
		$email = $email = $this->randomName() . '@' . $this->randomName() . ".com";
		$this->OsPokerSendInvites(array($name => $email));
		$this->drupalLogout();

		$mail_queue = end($this->drupalGetMails());
		$code = $mail_queue['params']['invite']->code;
		$this->drupalGet('invite/accept/'. $code);
		$password = $this->randomName();
		$options = array(
						 'name'        => $name,
						 'pass[pass1]' => $password,
						 'pass[pass2]' => $password,
						 );
		$this->drupalPost($this->getUrl(), $options, t('Create new account'));
		$this->OsPokerProfileSubmit(array('profile_nickname' => $name));
		$this->drupalLogout();

	  }

	$test_user = CUserManager::instance()->User($this->skel_user->uid);
	$test_buddies = $test_user->Buddies(TRUE);

	$previous_max_chips = 0;
	foreach ($test_buddies as $buddy)
	  {
		$buddy->chips += rand(1000, 5000);
		$buddy->Save();
		if ($buddy->Chips() > $previous_max_chips)
		  $previous_max_chips = $buddy->Chips();
	  }

	$test_buddies = $test_user->Buddies(TRUE, TRUE);

	$this->pass('Number of Chips', 'SpecPoker');

	foreach ($test_buddies as $buddy)
	  {
		$this->assertTrue($buddy->Chips() <= $previous_max_chips, "Sort OK : ".$buddy->Chips());
		$previous_max_chips = $buddy->Chips();
	  }

	$test_buddies = $test_user->Buddies(TRUE, TRUE);

	$this->drupalLogin($this->skel_user);

	$ranking_content = $this->drupalGet("poker/profile/ranking");
	$this->assertTrue(TRUE, $this->drupalGetContent());

	/* build a magical regexp to ensure buddies are displayed in right order (descendant by chips amount) in ranking view */
	$regexp = "";
	$i = 1; // first index appearing in top 10 listing
	foreach ($test_buddies as $buddy)
	  {
		$regexp = $regexp.".+?<div class=\"buddy_list_number.+?\">\s+?".$i."\s+?<\/div>.+?<div class=\"buddy_list_chips\">\s+?\\".$buddy->Chips(TRUE);
		$this->assertTrue(preg_match("/".$regexp."/siU", $ranking_content) > 0, "intermediate ranking magic regexp checking for ".$i." / ".$buddy->Chips(TRUE));
		$i++;
	  }
	$regexp = $regexp.".+?";


	$this->assertTrue(preg_match("/".$regexp."/siU", $ranking_content) > 0, "complete ranking magic regexp checking for all above to appears in the order defined");

  }

}
