<?php // -*- mode: php; tab-width: 2 -*-
//
//    Copyright (C) 2009, 2010 Pokermania
//
//    This program is free software: you can redistribute it and/or modify
//    it under the terms of the GNU Affero General Public License as published by
//    the Free Software Foundation, either version 3 of the License, or
//    (at your option) any later version.
//
//    This program is distributed in the hope that it will be useful,
//    but WITHOUT ANY WARRANTY; without even the implied warranty of
//    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//    GNU Affero General Public License for more details.
//
//    You should have received a copy of the GNU Affero General Public License
//    along with this program.  If not, see <http://www.gnu.org/licenses/>.
//


/**
 * @file
 * Poker 5.21: Who is at that Table
 *
 */

/**
 * Includes the custom test case class with basic site configuration.
 */
require_once(dirname(__FILE__) .'/os_poker_test_case.tinc');

/**
 * Spec: 5.21: Who is at that Table test case
 *
 * Verifies whatever workflow is working according to specifications.
 * Validates this and that.
 *
 * @assert: this little step.
 * @assert: other little step.
 *
 */
class OSPokerWhoIsAtThatTable extends OsPokerWebTestCase {

  /**
   * @var user object created and logged in during setUp process.
   */
  protected $skel_user;

  /**
   * Implementation of hook_info().
   */
  public static function getInfo() {
    return array(
      'name'        => '5.21 Who is at that Table test case',
      'description' => 'Who is at that Table functionality tests',
      'group'       => 'OS Poker Specifications',
    );
  }

  /**
   * Implementation of setUp().
   */
  function setUp() {
    parent::setUp();
    module_load_include('php', 'os_poker', 'user.class');
    $this->userManager = CUserManager::instance();
    $this->table = $this->createPokerTable('foo');
    for ($i = 0; $i < 4; $i++) {
      $user = $this->users[] = $this->OsPokerCreateUserWithProfile();
    }
    $this->user = $this->users[0];
    $this->drupalLogin($this->user);
  }

  /**
   * Implementation of tearDown().
   */
  function tearDown() {
    parent::tearDown();
    $this->users = array();
  }

  function testWhoIsAtThatTable() {
    for ($i = 1; $i < 4; $i++) {
      $this->joinPokerTable($this->users[$i], $this->table);
    }
    $this->drupalGet('poker/table/'.$this->table.'/players');
    for ($i = 1; $i < 4; $i++) {
      $user = $this->userManager->User($this->users[$i]->uid, true);
      $this->assertRaw(theme('username', $user), t('User #!no name found.', array('!no' => $i)));
      $this->assertRaw(theme('user_picture', $user), t('User #!no picture found.', array('!no' => $i)));
      $this->assertText($user->Chips(), t('User #!no chips count found.', array('!no' => $i)));
    }
  }
}
