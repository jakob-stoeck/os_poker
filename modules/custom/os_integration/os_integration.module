<?php
define ('OPENSOCIAL','opensocial');


require_once drupal_get_path('module','os_integration').'/osapi/osapi.php';
function os_integration_get_profile_infos($myspace_profile_id) {
	//$storage = new osapiFileStorage('/home/cw');
	//$storage,session_id(),
	$authprovider = new osapiOAuth2Legged('http://www.myspace.com/543425949','98a4536e0b4a4a4e8ac285e0b9d3836bfc8fa8bf4891484c97b2928de77727fa',$_REQUEST['opensocial_viewer_id']);
//stage 
//	$authprovider = new osapiOAuth2Legged('http://www.myspace.com/545832201','8cbe3344158c4367a159e3b65d8b47c5edfb58a7c2c84a08acd879045a60b9de',$_REQUEST['opensocial_viewer_id']);

	$myspaceprovider = new osapiMySpaceProvider();
	$osapi = new osapi($myspaceprovider,$authprovider);
	$batch = $osapi->newBatch();
	$profile_fields = array(
 '@all'
 );
 $self_request_params = array(
 'userId' => $myspace_profile_id, 
 'groupId' => '@self', 
 'fields' => $profile_fields 
 );
 $batch->add($osapi->people->get($self_request_params), 'self');
 $response = $batch->execute();
 return $response['self']; 
}
function os_integration_create_profile($myspace_profile_id) {
	global $user;
	//$infos = os_integration_get_profile_infos($myspace_profile_id);

	$edit = array();
	$edit['roles'][DRUPAL_AUTHENTICATED_RID] = 'authenticated user';

	// Ensure unique username.  Append "_N" if necessary.
	if (isset($edit['name']) && $edit['name']) {
		$username = $edit['name'];
	}
	else {
		$username = "$myspace_profile_id@myspace.com";
		$edit['name'] = $username;
	}
	$i = 1;
	while (db_result(db_query("SELECT name FROM {users} WHERE name='%s'", $edit['name']))) {
		$i++;
		$edit['name'] = $username . '_' . $i;
	}
	$defaults = array(
      'pass' => user_password(),
      'init' => db_escape_string($edit['name']),
      'status' => 1,
      'authname_os_user' => $myspace_profile_id, // authmap entry
	);
	$defaults['mail'] = $myspace_profile_id.'@os-myspace.com';
	$edit = array_merge($defaults, $edit);
	$edit['_osu']=$myspace_profile_id;

	$user = user_save('', $edit);

	watchdog('opensocial', 'New user: %name %email.',
	array('%name' => $account->name, '%email' => '<'. $account->mail .'>'),
	WATCHDOG_NOTICE, l(t('edit'), 'user/'. $account->uid .'/edit'));
	
}
function os_integration_create_profile_callback($myspace_profile_id) {
	os_integration_create_profile($myspace_profile_id);
	drupal_goto('poker/first_profile');
}
function os_integration_menu() {
  $items = array();
  
  // Admin pages overview.
  $items['os_integration_create_user/%'] = array(
    'title' => 'Opensocial create profile',
    'description' => 'creates profile and forward to /first_profile',
    'page callback' => 'os_integration_create_profile_callback',
    'access arguments' => array('access content'),
    'page arguments' => array(
      1
    )
    'type' => MENU_CALLBACK,
  );
  return $items;
}

function os_integration_form_os_poker_first_profile_form_alter(&$form,&$form_state) {
    global $user;
    
    if (isset($user->_osu) ) {
    
    	$profile = os_integration_get_profile_infos($user->_osu);
    	
    	
    	
        $folder =  file_directory_path().'/os_pictures';
    	$url = $profile->thumbnailUrl;
    	file_check_directory($folder,FILE_CREATE_DIRECTORY);
    	$file= $folder.'/pic_'.$user->_osu.'.jpg';
    	file_save_data(file_get_contents($url),$file);
		try { 
    	$form['profile_nickname']['#default_value']=$profile->displayName;
    	if (isset($profile->currentLocation['country'])) { 
    		$form['profile_country']['#default_value'] = $profile->currentLocation['country'];
    	}
    	
    	if ($profile->birthday!='') { 
    	$birthday = explode('T',$profile->birthday);
    	$birthday = $birthday[0]; 
    	$birthdayAry = explode('-',$profile->birthday);
        if (count($birthdayAry)==3) {
         
        	$form['profile_dob']['#default_value']['day']=(int)$birthdayAry[2];
        	$form['profile_dob']['#default_value']['month']=(int)$birthdayAry[1];
        	$form['profile_dob']['#default_value']['year']=$birthdayAry[0];
        }
    	}
        $form['profile_city']['#default_value']=$profile->currentLocation['locality'];
    	$sex = strtolower($profile->gender);
        if ($sex=='male' ) {
            $form['profile_gender']['#default_value']='Male';
        }else if ($sex=='female') {
            $form['profile_gender']['#default_value']='Female';
        }
		}catch (Exception $e) {
			watchdog('opensocial error', $e->getMessage());
        }
/*
 * 
        try {
        
        currentLocation
        //db_query ("update {users} set mail='".$me['email']."',picture='".$file."' where uid=%s",array($user->uid));
		//$user->email = $me['email'];
		
        if ($me!=null) {
            $locales = explode('_',$me['locale']);
            $locale = strtoupper($locales[1]);
            $form['profile_country']['#default_value'] = $locale;
        }
        
        $birthdayAry = explode('/',$me['birthday']);
        if (count($birthdayAry)==3) {
         
        	$form['profile_dob']['#default_value']['day']=(int)$birthdayAry[1];
        	$form['profile_dob']['#default_value']['month']=(int)$birthdayAry[0];
        	$form['profile_dob']['#default_value']['year']=$birthdayAry[2];
        }
        $form['profile_nickname']['#default_value']=$me['name'];
        $names = explode (',',$me['hometown']['name']);
        $form['profile_city']['#default_value']=$names[0];
        $sex = strtolower($me['gender']);
        if ($sex=='male' || $sex=='mÃ¤nnlich') {
            $form['profile_gender']['#default_value']='Male';
        }else if ($sex=='female' || $sex=='female') {
            $form['profile_gender']['#default_value']='Female';
        }
        }catch (Exception $e) {
			echo $e->getMessage();
        }
        */

    }
}

function os_integration_get_user_id($authname = NULL) {
  $result = db_query("SELECT uid, module FROM {authmap} WHERE authname = '%s'", $authname);
  $authmaps = array();
  $has_rows = FALSE;
  while ($authmap = db_fetch_object($result)) {
    $authmaps[$authmap->module] = $authmap->uid;
    $has_rows = TRUE;
  }
  
  
  return $has_rows ? $authmaps : 0;
}

function os_integration_get_opensocial_user($myspace_profile_id) {
	global $user;
	$ids = os_integration_get_user_id($myspace_profile_id);
	if (isset($ids['os_user'])) {
		$user = user_load($ids['os_user']);
		sess_regenerate();
		watchdog('opensocial', 'get user: '.$user->uid. ' '.$usser->name);
		return true;
	}
	return false;
}
function os_integration_addjs()  {
//	drupal_add_js('http://js.myspacecdn.com/OpenSocial/RPC/RpcContainer.003.js',);
	drupal_add_js(drupal_get_path('module','os_integration').'/js/IFPC_externalIframe011.js');


	drupal_add_js(' 


gadgets.rpc.setRelayUrl(\'..\', \'http://profile.myspace.com/Modules/Applications/Pages/rpc_relay.aspx\'); 
// set the correct panel id. The name will be apppanel_XXXXXX_canvas where
// XXXXXX is the id of the application
    MyOpenSpace.MySpaceContainer.get().registerParam("panelId", "apppanel_'.$_REQUEST['appid'].'_canvas");
//Set the location of the ifpc_relay_external001.html within your server
    MyOpenSpace.MySpaceContainer.get().registerParam("localRelay", "http://'.$_SERVER['HTTP_HOST'].'/'.drupal_get_path('module','os_integration').'/relay.html");

    function os_integration_call_regist_user() {
    	window.location.href=\'/os_integration_create_user/'.$myspace_profile_id.'\'; 
    }
    function os_integration_requestPermission(){
    	
		var permissionValue = "VIEWER_FULL_PROFILE_INFO";
		var container = MyOpenSpace.MySpaceContainer.get();
		var permission = MyOpenSpace.Permission[permissionValue];
		
		var hasPermission = container.hasPermission(permission);
	
		
		
		
		if (hasPermission){
			os_integration_call_regist_user();
			return;
		}
		var callback = function (response){
			var responseText;
			
			if (response.errorMessage){
				responseText = "Error: " + response.errorMessage;
				if (response.permissions){
					responseText += "Permissions granted:<br />"
					for (var i in permission){
						responseText += "<br />" + permission.permission;
					}
				}
				alert(responseText);
			}
			else if (response.permissions){
					os_integration_call_regist_user();
			}
		}
		
		container.requestPermission(permission,"Test permission request", callback);
	}

	
    //;

','inline');
}
function os_integration_init()  {
	//print_r($_REQUEST);
	
	global $user;
	if (!isset($_REQUEST['opensocial_viewer_id'])) {
		return ;
	}
	os_integration_addjs() ;
	$myspace_profile_id = $_REQUEST['opensocial_viewer_id'];
	if ($user->uid!=0 && isset($user->_osu) && $user->_osu==$myspace_profile_id) {
		return ;
	}
	if (($user->uid!=0 && !isset($user->_osu)) || (isset($user->_osu) && $user->_osu!=$myspace_profile_id)) {
		session_destroy();
		$user = drupal_anonymous_user();
	}
	
	if (os_integration_get_opensocial_user($myspace_profile_id)==true) {
		return ;
	}
	drupal_add_js('os_integration_requestPermission()');
	
}
?>