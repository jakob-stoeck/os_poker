<?php

/**
 * Implementation of hook_fb().
 *
 * This hook customizes the behavior of modules/fb.
 */
function fb_integration_fb($op, $data, &$return) {
  if ($op == FB_OP_JS) {
    if (fb_is_canvas() && !fb_facebook_user()) {
      // Canvas page and user has not authorized the app.  Call FB.login() to force authorization.
      // Note: facebook does not recommend this approach and claims that many browsers will block the popup.
      // Instead, we should call this only in response to a user click.
      // http://developers.facebook.com/docs/reference/javascript/FB.login
      $js = "FB.login(function(response) { }, Drupal.settings.fb.perms);";
      //$return[] = "alert('$js');"; // debug
      //$return[] = 'debugger;'; // debug
      $return[] = $js;
    }
  }
  if ($op == FB_OP_POST_INIT) {
    //drupal_add_js(drupal_get_path('module', 'fb_integration') . '/fb_integration.js');
  }
}



function fb_integration_forward() {
	echo '<a href="/">asdf</a>';
	exit;
}
/*function fb_integration_menu() {
  $items = array();
  
  // Admin pages overview.
  $items['startsession'] = array(
    'title' => 'Facebook Applications',
    'description' => 'Facebook Applications',
    'page callback' => 'fb_integration_forward',
    'access arguments' => array('access content'),
    
    'type' => MENU_NORMAL_ITEM,
  );
  return $items;
}*/

function fb_integration_init() {
/*	if (isset($_REQUEST['fb_int_sig_in_iframe'])) {
		$_REQUEST['fb_sig_in_iframe']= $_REQUEST['fb_int_sig_in_iframe'];
		$_SESSION['fb_int_sig_in_iframe']= $_REQUEST['fb_int_sig_in_iframe'];
	}else if(isset($_SESSION['fb_int_sig_in_iframe'])){ 
		$_REQUEST['fb_sig_in_iframe']= $_SESSION['fb_int_sig_in_iframe'];
	}*/
	header('P3P:CP="IDC DSP COR ADM DEVi TAIi PSA PSD IVAi IVDi CONi HIS OUR IND CNT"');
}
function fb_integration_user($op, &$edit, &$account, $category = NULL) {
	
	
	global $_fb, $fb_app;
	/*
	if ($op == 'logout') {
      try {
		if ($_fb) {
			$appId = $_fb->getAppId();
			$cookieId = 'fbs_'.$appId;
			//unset($_COOKIE[$cookieId]);
			setcookie($cookieId,"",time()-1000);
			session_unset();
			session_destroy();
			
        }
      } catch (Exception $e) {
		fb_log_exception($e, t('Failed to log out of fbConnect session'));
      }
	}*/

    
    if ($op!='login') {
        return;
    }
    
    if ($_fb==null) {
        return;
    }

    

	try { 
    	$fbus = $_fb->api(array('method' => 'friends.getAppUsers'));//array(1328933654,100000684168920,100001206182306 ) ;
    }catch (Exception $e) {
    	return; 
    }
    $query = "SELECT uid FROM {authmap}
        left join {user_relationships} on {user_relationships}.requestee_id = {authmap}.uid
	and {user_relationships}.requester_id=%s
        WHERE authname IN (%s) AND module='%s'  and {user_relationships}.requestee_id is null"  ; // better? way using authmap.
    $args[] = $account->uid;
    $args[] = implode(',', $fbus);
    $args[] = 'fb_user';

    $result = db_query($query, $args);
    $uids = array();
    while ($data = db_fetch_object($result)) {
      if ($data->uid) {
        $uids[] = $data->uid;
      }
    }
    if (count($uids)==0) {
        return ;
    }
    $rtype = user_relationships_type_load(array('name'=>'buddy'));

    for ($i=0;$i<count($uids);$i++) {
      $relationship = new stdClass();
      $relationship->requestee_id = $uids[$i];
      $relationship->requester_id=$account->uid;
      $relationship->rtid =$rtype->rtid;
      $relationship->approved = 1;
      user_relationships_save_relationship($relationship,'fbapprove');
    }


}

function fb_integration_form_os_poker_first_profile_form_alter(&$form,&$form_state) {
    global $user;
    global $_fb;
    
    if (isset($user->fbu) ) {
	unset($form['#token']); // drupal_validate_form errors because of different session id   
        $folder =  file_directory_path().'/fb_pictures';
    	$url = 'https://graph.facebook.com/'.$user->fbu.'/picture?type=large';
    	file_check_directory($folder,FILE_CREATE_DIRECTORY);
    	$file= $folder.'/pic_'.$user->fbu.'.jpg';
    	file_save_data(file_get_contents($url),$file);
		

        try {
        $me = $_fb->api('/me');
        db_query ("update {users} set mail='".$me['email']."',picture='".$file."' where uid=%s",array($user->uid));
		//$user->email = $me['email'];
		
        if ($me!=null) {
            $locales = explode('_',$me['locale']);
            $locale = strtoupper($locales[1]);
            $form['profile_country']['#default_value'] = $locale;
        }
        
        $birthdayAry = explode('/',$me['birthday']);
        if (count($birthdayAry)==3) {
         
        	$form['profile_dob']['#default_value']['day']=(int)$birthdayAry[1];
        	$form['profile_dob']['#default_value']['month']=(int)$birthdayAry[0];
        	$form['profile_dob']['#default_value']['year']=$birthdayAry[2];
        }
        $form['profile_nickname']['#default_value']=$me['name'];
        $names = explode (',',$me['hometown']['name']);
        $form['profile_city']['#default_value']=$names[0];
        $sex = strtolower($me['gender']);
        if ($sex=='male' || $sex=='mÃ¤nnlich') {
            $form['profile_gender']['#default_value']='Male';
        }else if ($sex=='female' || $sex=='female') {
            $form['profile_gender']['#default_value']='Female';
        }
        }catch (Exception $e) {
			echo $e->getMessage();
        }

    }
}

?>
